[
  {
    "policy_name": "Allow admins full access to notes",
    "table_name": "notes",
    "policy_role": "authenticated",
    "command": "*",
    "policy_expression": "(EXISTS ( SELECT 1\n   FROM admin_users\n  WHERE ((admin_users.user_id)::text = requesting_user_id())))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Allow owners full access to notes",
    "table_name": "notes",
    "policy_role": "authenticated",
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Allow shared users to view notes",
    "table_name": "notes",
    "policy_role": "authenticated",
    "command": "r",
    "policy_expression": "(EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = notes.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now())))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage notes",
    "table_name": "notes",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view notes",
    "table_name": "notes",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage medical history",
    "table_name": "medical_history",
    "policy_role": "authenticated",
    "command": "*",
    "policy_expression": "(EXISTS ( SELECT 1\n   FROM patients\n  WHERE ((patients.id = medical_history.patient_id) AND (patients.user_id = requesting_user_id_immutable()))))",
    "with_check_expression": "(EXISTS ( SELECT 1\n   FROM patients\n  WHERE ((patients.id = medical_history.patient_id) AND (patients.user_id = requesting_user_id_immutable()))))",
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view shared medical history",
    "table_name": "medical_history",
    "policy_role": "authenticated",
    "command": "r",
    "policy_expression": "(EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = medical_history.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id_immutable()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now())))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Admins can manage admin_users",
    "table_name": "admin_users",
    "policy_role": "authenticated",
    "command": "*",
    "policy_expression": "(EXISTS ( SELECT 1\n   FROM admin_users a\n  WHERE ((a.user_id)::text = requesting_user_id_immutable())))",
    "with_check_expression": "(EXISTS ( SELECT 1\n   FROM admin_users a\n  WHERE ((a.user_id)::text = requesting_user_id_immutable())))",
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage allergies",
    "table_name": "allergies",
    "policy_role": "authenticated",
    "command": "*",
    "policy_expression": "(EXISTS ( SELECT 1\n   FROM patients\n  WHERE ((patients.id = allergies.patient_id) AND (patients.user_id = requesting_user_id_immutable()))))",
    "with_check_expression": "(EXISTS ( SELECT 1\n   FROM patients\n  WHERE ((patients.id = allergies.patient_id) AND (patients.user_id = requesting_user_id_immutable()))))",
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view shared allergies",
    "table_name": "allergies",
    "policy_role": "authenticated",
    "command": "r",
    "policy_expression": "(EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = allergies.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id_immutable()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now())))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage immunizations",
    "table_name": "immunizations",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view immunizations",
    "table_name": "immunizations",
    "policy_role": null,
    "command": "r",
    "policy_expression": "((user_id = requesting_user_id()) OR (EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = immunizations.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now()))))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage medications",
    "table_name": "medications",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view medications",
    "table_name": "medications",
    "policy_role": null,
    "command": "r",
    "policy_expression": "((user_id = requesting_user_id()) OR (EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = medications.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now()))))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view medications through prescriptions",
    "table_name": "medications",
    "policy_role": "authenticated",
    "command": "r",
    "policy_expression": "((user_id = requesting_user_id()) OR (EXISTS ( SELECT 1\n   FROM prescriptions\n  WHERE ((prescriptions.id = medications.prescription_id) AND (prescriptions.patient_id IN ( SELECT patient_shares.patient_id\n           FROM patient_shares\n          WHERE (((patient_shares.shared_with_user_id)::text = requesting_user_id()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now())))))))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage appointments",
    "table_name": "appointments",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view appointments",
    "table_name": "appointments",
    "policy_role": null,
    "command": "r",
    "policy_expression": "((user_id = requesting_user_id()) OR (EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = appointments.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now()))))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage medical files",
    "table_name": "medical_files",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view medical files",
    "table_name": "medical_files",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Enable read access for all users",
    "table_name": "Event_Categories",
    "policy_role": null,
    "command": "r",
    "policy_expression": "true",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage patient doctors",
    "table_name": "patient_doctors",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view patient doctors",
    "table_name": "patient_doctors",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage patients",
    "table_name": "patients",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view patients",
    "table_name": "patients",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage prescriptions",
    "table_name": "prescriptions",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view prescriptions",
    "table_name": "prescriptions",
    "policy_role": null,
    "command": "r",
    "policy_expression": "((user_id = requesting_user_id()) OR (EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = prescriptions.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now()))))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage user family group",
    "table_name": "user_family_group",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view user family group",
    "table_name": "user_family_group",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage own profile",
    "table_name": "users",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view own profile",
    "table_name": "users",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage todos",
    "table_name": "todos",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view todos",
    "table_name": "todos",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage vitals",
    "table_name": "vitals",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view vitals",
    "table_name": "vitals",
    "policy_role": null,
    "command": "r",
    "policy_expression": "((user_id = requesting_user_id()) OR (EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = vitals.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now()))))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Enable insert own logins",
    "table_name": "app_logins",
    "policy_role": null,
    "command": "a",
    "policy_expression": null,
    "with_check_expression": "(user_id = requesting_user_id())",
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Enable read for own logins",
    "table_name": "app_logins",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage doctors",
    "table_name": "doctors",
    "policy_role": null,
    "command": "*",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view doctors",
    "table_name": "doctors",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage notifications",
    "table_name": "notifications",
    "policy_role": null,
    "command": "*",
    "policy_expression": "((user_id)::text = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view notifications",
    "table_name": "notifications",
    "policy_role": null,
    "command": "r",
    "policy_expression": "((user_id)::text = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can create shares",
    "table_name": "patient_shares",
    "policy_role": null,
    "command": "a",
    "policy_expression": null,
    "with_check_expression": "(EXISTS ( SELECT 1\n   FROM patients\n  WHERE ((patients.id = patient_shares.patient_id) AND (patients.user_id = requesting_user_id()))))",
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage own shares",
    "table_name": "patient_shares",
    "policy_role": null,
    "command": "*",
    "policy_expression": "((shared_by_user_id)::text = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view shares",
    "table_name": "patient_shares",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(((shared_by_user_id)::text = requesting_user_id()) OR ((shared_with_user_id)::text = requesting_user_id()))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage pending shares they created",
    "table_name": "pending_shares",
    "policy_role": "authenticated",
    "command": "*",
    "policy_expression": "(shared_by_user_id = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view pending shares for their email",
    "table_name": "pending_shares",
    "policy_role": "authenticated",
    "command": "r",
    "policy_expression": "(email = ( SELECT users.email\n   FROM users\n  WHERE (users.user_id = requesting_user_id())))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage documents",
    "table_name": "documents",
    "policy_role": null,
    "command": "*",
    "policy_expression": "((user_id)::text = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view documents",
    "table_name": "documents",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(((user_id)::text = requesting_user_id()) OR (EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = documents.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now()))))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage family groups",
    "table_name": "family_groups",
    "policy_role": null,
    "command": "*",
    "policy_expression": "((user_id)::text = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view family groups",
    "table_name": "family_groups",
    "policy_role": null,
    "command": "r",
    "policy_expression": "((user_id)::text = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage lab results",
    "table_name": "lab_results",
    "policy_role": null,
    "command": "*",
    "policy_expression": "((user_id)::text = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view lab results",
    "table_name": "lab_results",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(((user_id)::text = requesting_user_id()) OR (EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = lab_results.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now()))))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage patient family group",
    "table_name": "patient_family_group",
    "policy_role": null,
    "command": "*",
    "policy_expression": "((user_id)::text = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view patient family group",
    "table_name": "patient_family_group",
    "policy_role": null,
    "command": "r",
    "policy_expression": "((user_id)::text = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can manage timeline events",
    "table_name": "timeline_events",
    "policy_role": null,
    "command": "*",
    "policy_expression": "((user_id)::text = requesting_user_id())",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  },
  {
    "policy_name": "Users can view timeline events",
    "table_name": "timeline_events",
    "policy_role": null,
    "command": "r",
    "policy_expression": "(((user_id)::text = requesting_user_id()) OR (EXISTS ( SELECT 1\n   FROM patient_shares\n  WHERE ((patient_shares.patient_id = timeline_events.patient_id) AND ((patient_shares.shared_with_user_id)::text = requesting_user_id()) AND (patient_shares.access_level = ANY (ARRAY['read'::text, 'write'::text, 'admin'::text])) AND ((patient_shares.expires_at IS NULL) OR (patient_shares.expires_at > now()))))))",
    "with_check_expression": null,
    "policy_type": "PERMISSIVE"
  }
]